webpackJsonp([1],{41:function(e,t,n){e.exports={default:n(919),__esModule:!0}},914:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}n(915),n(917);var l=n(134),r=a(l),u=n(12),c=n(918),d=a(c);r.default.start(),window.onload=function(){r.default.done()},document.title="DEMO",(0,u.render)(d.default,document.getElementById("App"))},915:function(e,t){},917:function(e,t){},918:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var l=n(41),r=a(l),u=n(6),c=a(u),d=n(11),o=a(d),i=n(7),s=a(i),f=n(8),m=a(f),p=n(1),E=a(p),h=n(131),y=n(922),k=a(y),v=n(924),g=a(v),b=n(934),w=a(b),C=function(e){function t(e){return(0,c.default)(this,t),(0,s.default)(this,(t.__proto__||(0,r.default)(t)).call(this,e))}return(0,m.default)(t,e),(0,o.default)(t,[{key:"render",value:function(){return E.default.createElement("div",null,E.default.createElement(h.Switch,null,E.default.createElement(h.Route,{path:"/",exact:!0,component:g.default}),E.default.createElement(h.Route,{path:"/admin",component:w.default}),E.default.createElement(h.Route,{path:"/404",component:k.default}),E.default.createElement(h.Redirect,{path:"/",to:"/404"})))}}]),t}(p.Component);t.default=E.default.createElement(h.HashRouter,null,E.default.createElement(h.Route,{path:"/",component:C}))},919:function(e,t,n){n(920),e.exports=n(28).Object.getPrototypeOf},920:function(e,t,n){var a=n(143),l=n(240);n(921)("getPrototypeOf",function(){return function(e){return l(a(e))}})},921:function(e,t,n){var a=n(33),l=n(28),r=n(49);e.exports=function(e,t){var n=(l.Object||{})[e]||Object[e],u={};u[e]=t(n),a(a.S+a.F*r(function(){n(1)}),"Object",u)}},922:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var l=n(41),r=a(l),u=n(6),c=a(u),d=n(11),o=a(d),i=n(7),s=a(i),f=n(8),m=a(f);n(923);var p=n(1),E=a(p),h=function(e){function t(e){return(0,c.default)(this,t),(0,s.default)(this,(t.__proto__||(0,r.default)(t)).call(this,e))}return(0,m.default)(t,e),(0,o.default)(t,[{key:"render",value:function(){return E.default.createElement("div",{className:"undefined-page-bg"},E.default.createElement("a",{className:"button",href:"/"},"返回首页"))}}]),t}(p.Component);t.default=h},923:function(e,t){},924:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var l=n(41),r=a(l),u=n(6),c=a(u),d=n(11),o=a(d),i=n(7),s=a(i),f=n(8),m=a(f);n(925);var p=n(1),E=a(p),h=n(926),y=a(h),k=(n(927),n(928)),v=a(k),g=n(64),b=(0,g.createStore)(y.default),w=function(e){function t(e){(0,c.default)(this,t);var n=(0,s.default)(this,(t.__proto__||(0,r.default)(t)).call(this,e));return n.state={oneValue:"",twoValue:"",store:b.getState().counter},n}return(0,m.default)(t,e),(0,o.default)(t,[{key:"componentWillMount",value:function(){var e=this;e.unsubscribe=b.subscribe(function(){e.setState({store:b.getState().counter})})}},{key:"componentWillUnmount",value:function(){this.unsubscribe()}},{key:"changeOne",value:function(e){var t=this,n=e.target.value;t.setState({oneValue:n})}},{key:"changeTwo",value:function(e){var t=this,n=e.target.value;t.setState({twoValue:n})}},{key:"clickHandle",value:function(){var e=this,t=e.state.oneValue;"20180327"===t?(window.sessionStorage.setItem("one",t),window.open("./#/admin/interviewQuestion")):v.default.info("密码错误")}},{key:"clickHandle2",value:function(){var e=this,t=e.state.twoValue;"zhoushaojun"===t?(window.sessionStorage.setItem("two",t),window.open("./#/admin/interviewSupply")):v.default.info("密码错误")}},{key:"render",value:function(){var e=this;return E.default.createElement("div",null,E.default.createElement("div",{style:{textAlign:"center",padding:"20px 0"}},E.default.createElement("input",{onChange:e.changeOne.bind(e),value:e.state.oneValue,type:"text"}),E.default.createElement("button",{onClick:e.clickHandle.bind(e)},"前端面试题1")),E.default.createElement("div",{style:{textAlign:"center",padding:"20px 0"}},E.default.createElement("input",{onChange:e.changeTwo.bind(e),value:e.state.twoValue,type:"text"}),E.default.createElement("button",{onClick:e.clickHandle2.bind(e)},"前端面试题补充")))}}]),t}(p.Component);t.default=w},925:function(e,t){},926:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(64),l=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments[1];switch(t.type){case"TEST":e.test=t.data.inputValue}return e},r=(0,a.combineReducers)({counter:l});t.default=r},927:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.IO=t.context=void 0;var l=n(226),r=a(l),u=n(134),c=a(u),d=r.default.context({mockUrlPrefix:"/mock/",mock:!1,willFetch:function(){c.default.start()},didFetch:function(){c.default.done()},withCredentials:!0,traditional:!0,fit:function(e){return{success:e.success,content:e,error:e}}});d.create("Home",{test:{mockUrl:"home/test.json",url:"mock/home/test.json"}});var o=d.api;t.context=d,t.IO=o},928:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(929),l=function(e){return e&&e.__esModule?e:{default:e}}(a);t.default=l.default,e.exports=t.default},929:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(){return k&&k.destroy&&k.destroy(),k=h.default.newInstance({prefixCls:g,className:w,transitionName:b,getContainer:C,style:{left:"50%"}})}function u(){x&&(_+=1)}function c(){x&&(_=Math.max(_-1,0))}function d(){x&&!_&&k&&k.destroy&&(k.destroy(),k=null)}function o(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:y,a=arguments[2],o=arguments[3],i=e&&e.content?e:null,s={info:"uxcore-icon uxicon-tishi-full",success:"uxcore-icon uxicon-chenggong-full",error:"uxcore-icon uxicon-biaodanlei-tongyongqingchu",loading:"uxcore-icon uxicon-loading-icon-round",nw_loading:"kuma-loading"}[a],m=x&&k?k:r(i);return u(),m.notice({key:v,duration:i?i.duration:n,className:i?i.className:null,style:{right:"50%"},content:f.default.createElement("div",{className:(0,p.default)((t={},l(t,g+"-container "+g+"-container-"+a,!0),l(t,"fn-clear",!0),t))},f.default.createElement("i",{className:s}),f.default.createElement("div",{className:g+"-content"},i?i.content:e)),onClose:function(){c(),d(),(i&&i.onClose||o||function(){}).apply(void 0,arguments)}}),function(){var e=v;return v+=1,function(){return m.removeNotice(e)}}()}Object.defineProperty(t,"__esModule",{value:!0});var i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},s=n(1),f=a(s),m=n(3),p=a(m),E=n(930),h=a(E),y=1.5,k=void 0,v=1,g="kuma-message",b="message-moveUp",w=void 0,C=void 0,x=!0,M="small",_=0,O={};["info","success","error","loading","nw_loading"].forEach(function(e){O[e]=function(t,n,a){return o(t,n,e,a)}}),t.default=i({},O,{clear:function(){r()},config:function(e){e&&(g=e.prefixCls||g,b=e.transitionName||b,w=e.className||w,x=void 0===e.multipleInstance?x:e.multipleInstance,C=e.getContainer,M=e.size||M)}}),e.exports=t.default},930:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(931);t.default=a.a},931:function(e,t,n){"use strict";function a(){return"rcNotification_"+N+"_"+S++}var l=n(67),r=n.n(l),u=n(18),c=n.n(u),d=n(14),o=n.n(d),i=n(6),s=n.n(i),f=n(11),m=n.n(f),p=n(7),E=n.n(p),h=n(8),y=n.n(h),k=n(1),v=n.n(k),g=n(2),b=n.n(g),w=n(12),C=n.n(w),x=n(37),M=n(932),_=n(3),O=n.n(_),T=n(933),S=0,N=Date.now(),P=function(e){function t(){var e,n,l,r;s()(this,t);for(var u=arguments.length,c=Array(u),d=0;d<u;d++)c[d]=arguments[d];return n=l=E()(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(c))),l.state={notices:[]},l.add=function(e){var t=e.key=e.key||a();l.setState(function(n){var a=n.notices;if(!a.filter(function(e){return e.key===t}).length)return{notices:a.concat(e)}})},l.remove=function(e){l.setState(function(t){return{notices:t.notices.filter(function(t){return t.key!==e})}})},r=n,E()(l,r)}return y()(t,e),m()(t,[{key:"getTransitionName",value:function(){var e=this.props,t=e.transitionName;return!t&&e.animation&&(t=e.prefixCls+"-"+e.animation),t}},{key:"render",value:function(){var e,t=this,n=this.props,a=this.state.notices.map(function(e){var a=Object(M.a)(t.remove.bind(t,e.key),e.onClose);return v.a.createElement(T.a,o()({prefixCls:n.prefixCls},e,{onClose:a}),e.content)}),l=(e={},c()(e,n.prefixCls,1),c()(e,n.className,!!n.className),e);return v.a.createElement("div",{className:O()(l),style:n.style},v.a.createElement(x.default,{transitionName:this.getTransitionName()},a))}}]),t}(k.Component);P.propTypes={prefixCls:b.a.string,transitionName:b.a.string,animation:b.a.oneOfType([b.a.string,b.a.object]),style:b.a.object},P.defaultProps={prefixCls:"rc-notification",animation:"fade",style:{top:65,left:"50%"}},P.newInstance=function(e){var t=e||{},n=t.getContainer,a=r()(t,["getContainer"]),l=void 0;n?l=n():(l=document.createElement("div"),document.body.appendChild(l));var u=C.a.render(v.a.createElement(P,a),l);return{notice:function(e){u.add(e)},removeNotice:function(e){u.remove(e)},component:u,destroy:function(){C.a.unmountComponentAtNode(l),document.body.removeChild(l)}}},t.a=P},932:function(e,t,n){"use strict";function a(){var e=[].slice.call(arguments,0);return 1===e.length?e[0]:function(){for(var t=0;t<e.length;t++)e[t]&&e[t].apply&&e[t].apply(this,arguments)}}t.a=a},933:function(e,t,n){"use strict";var a=n(18),l=n.n(a),r=n(6),u=n.n(r),c=n(11),d=n.n(c),o=n(7),i=n.n(o),s=n(8),f=n.n(s),m=n(1),p=n.n(m),E=n(3),h=n.n(E),y=n(2),k=n.n(y),v=function(e){function t(){var e,n,a,l;u()(this,t);for(var r=arguments.length,c=Array(r),d=0;d<r;d++)c[d]=arguments[d];return n=a=i()(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(c))),a.clearCloseTimer=function(){a.closeTimer&&(clearTimeout(a.closeTimer),a.closeTimer=null)},a.close=function(){a.clearCloseTimer(),a.props.onClose()},l=n,i()(a,l)}return f()(t,e),d()(t,[{key:"componentDidMount",value:function(){var e=this;this.props.duration&&(this.closeTimer=setTimeout(function(){e.close()},1e3*this.props.duration))}},{key:"componentWillUnmount",value:function(){this.clearCloseTimer()}},{key:"render",value:function(){var e,t=this.props,n=t.prefixCls+"-notice",a=(e={},l()(e,""+n,1),l()(e,n+"-closable",t.closable),l()(e,t.className,!!t.className),e);return p.a.createElement("div",{className:h()(a),style:t.style},p.a.createElement("div",{className:n+"-content"},t.children),t.closable?p.a.createElement("a",{tabIndex:"0",onClick:this.close,className:n+"-close"},p.a.createElement("span",{className:n+"-close-x"})):null)}}]),t}(m.Component);v.propTypes={duration:k.a.number,onClose:k.a.func,children:k.a.any},v.defaultProps={onEnd:function(){},onClose:function(){},duration:1.5,style:{right:"50%"}},t.a=v},934:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var l=n(41),r=a(l),u=n(6),c=a(u),d=n(11),o=a(d),i=n(7),s=a(i),f=n(8),m=a(f),p=n(1),E=a(p),h=n(131),y=n(935),k=a(y),v=n(936),g=a(v),b=n(939),w=a(b),C=function(e){function t(e){return(0,c.default)(this,t),(0,s.default)(this,(t.__proto__||(0,r.default)(t)).call(this,e))}return(0,m.default)(t,e),(0,o.default)(t,[{key:"render",value:function(){return E.default.createElement("div",null,E.default.createElement(h.Switch,null,E.default.createElement(h.Route,{path:"/admin/demo",exact:!0,component:k.default}),E.default.createElement(h.Route,{path:"/admin/interviewQuestion",exact:!0,component:g.default}),E.default.createElement(h.Route,{path:"/admin/interviewSupply",exact:!0,component:w.default}),E.default.createElement(h.Redirect,{path:"/admin",to:"/404"})))}}]),t}(p.Component);t.default=C},935:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var l=n(41),r=a(l),u=n(6),c=a(u),d=n(11),o=a(d),i=n(7),s=a(i),f=n(8),m=a(f),p=n(1),E=a(p),h=n(229),y=a(h),k=function(e){function t(e){(0,c.default)(this,t);var n=(0,s.default)(this,(t.__proto__||(0,r.default)(t)).call(this,e));return n.state={},n}return(0,m.default)(t,e),(0,o.default)(t,[{key:"render",value:function(){var e=[{dataKey:"country",title:"国家",width:200,ordered:!0},{dataKey:"city",title:"城市",width:200,ordered:!0},{dataKey:"firstName",title:"FristName",width:200},{dataKey:"lastName",title:"LastName",width:200},{dataKey:"email",title:"Email",width:200,ordered:!0}],t={data:[{id:"1",grade:"grade1",email:"email1",firstName:"firstName1",lastName:"lastName1",birthDate:"birthDate1",country:"country1",city:"city1"}],currentPage:1,totalCount:30},n={height:400,actionColumn:{edit:function(){},del:function(){}},className:"kuma-uxtable-split-line",fetchParams:{},showColumnPicker:!1,jsxdata:t,jsxcolumns:e};return E.default.createElement(y.default,n)}}]),t}(p.Component);t.default=k},936:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var l=n(41),r=a(l),u=n(6),c=a(u),d=n(11),o=a(d),i=n(7),s=a(i),f=n(8),m=a(f);n(937);var p=n(1),E=a(p),h=n(64),y=n(938),k=a(y),v=n(133),g=a(v),b=(0,h.createStore)(k.default),w=function(e){function t(e){(0,c.default)(this,t);var n=(0,s.default)(this,(t.__proto__||(0,r.default)(t)).call(this,e));return n.state={htmlTableOpen:!1,cssTableOpen:!1,apiTableOpen:!0,reqHeadOpen:!1,resHeadOpen:!1},n}return(0,m.default)(t,e),(0,o.default)(t,[{key:"componentWillMount",value:function(){"20180327"!==window.sessionStorage.getItem("one")&&(location.href="/")}},{key:"htmlFold",value:function(){var e=this.state.htmlTableOpen;this.setState({htmlTableOpen:!e})}},{key:"cssFold",value:function(){var e=this.state.cssTableOpen;this.setState({cssTableOpen:!e})}},{key:"apiFold",value:function(){var e=this.state.apiTableOpen;this.setState({apiTableOpen:!e})}},{key:"reqHeadFold",value:function(){var e=this.state.reqHeadOpen;this.setState({reqHeadOpen:!e})}},{key:"resHeadFold",value:function(){var e=this.state.resHeadOpen;this.setState({resHeadOpen:!e})}},{key:"render",value:function(){var e=this,t=e.state,n=e.htmlFold,a=e.cssFold,l=e.apiFold,r=e.reqHeadFold,u=e.resHeadFold;return E.default.createElement("div",{className:"interview-question"},E.default.createElement("h1",null,"2018.03.27——前端面试题"),E.default.createElement("h2",null,"基础题"),E.default.createElement("ul",null,E.default.createElement("li",null,E.default.createElement("h3",null,"1、js 数据类型有哪些？es6 中扩展了哪些？"),E.default.createElement("p",null,"基本数据类型：（Number, String, Boolean, Undefined, Null）。"),E.default.createElement("p",null,"引用数据类型：（Object, Array, Function, Date）。"),E.default.createElement("p",null,"ES6 引入了一种新的原始数据类型Symbol，表示独一无二的值。它是 JavaScript 语言的第七种数据类型。")),E.default.createElement("li",null,E.default.createElement("h3",null,"2、js 继承有哪些方式？"),E.default.createElement("p",null,"new创建实例（1、原型链继承：通过prototype属性；2、this继承：通过call或apply改变this指向）"),E.default.createElement("p",null,"拷贝继承（深拷贝、浅拷贝）"),E.default.createElement("p",null,"闭包继承（函数内部直接return）")),E.default.createElement("li",null,E.default.createElement("h3",null,"3、js闭包的优缺点？浏览器的垃圾回收机制？"),E.default.createElement("p",null,"优点：保护函数内的变量安全,加强了封装性。防止全局污染"),E.default.createElement("p",null,"缺点：常驻内存，会增大内存使用量，使用不当很容易造成内存泄露。"),E.default.createElement("br",null),E.default.createElement("p",null,"引用计数：（跟踪记录每个值被引用的次数。当声明一个变量并将引用类型的值赋给该变量时，则这个值的引用次数就是1。如果同一个值又被赋给另一个变量，则该值的引用次 数加1.相反，如果包含对这个值引用的变量又取得另外一个值，则这个值的引用次数减1.当这个值的引用次数变成0时，则说明没有办法访问这个值了，因此就 可以将其占用的内存空间回收回来。）"),E.default.createElement("p",null,"标记清除：（标记清除的算法分为两个阶段，标记(mark)和清除(sweep). 第一阶段从引用根节点开始标记所有被引用的对象，第二阶段遍历整个堆，把未标记的对象清除。）")),E.default.createElement("li",null,E.default.createElement("h3",null,"4、事件循环机制是什么？什么是Event loop?"),E.default.createElement("p",null,"因为js是单线程语言，所以当出现异步任务，这些任务就会加入任务队列（存在执行栈中，先进先出），当主线程（同步任务）走完后，就会执行任务队列里面的任务（我理解为消息订阅，Promise就是这种执行方式，then就是消息订阅机制，把then里面的事件放在任务队列里面，等promise内部的主线程走完后，根据状态机判断，去执行then里的callbacks）。"),E.default.createElement("p",null,"上述的js执行机制是循环不断的，每次主线程走完都会去任务队列里面读取事件，所以称为Event Loop")),E.default.createElement("li",null,E.default.createElement("h3",null,"5、css3 中哪些新增的属性？HTML5 中哪些新增的标签、以及api?"),E.default.createElement("p",null,"HTML5 ",E.default.createElement("a",{onClick:n.bind(e)},t.htmlTableOpen?"收起":"展开")),t.htmlTableOpen&&E.default.createElement("table",null,E.default.createElement("thead",null,E.default.createElement("tr",null,E.default.createElement("th",{width:"10%"},"新增元素"),E.default.createElement("th",{width:"40%"},"说明"),E.default.createElement("th",{width:"10%"},"新增元素"),E.default.createElement("th",{width:"40%"},"说明"))),E.default.createElement("tbody",null,g.default.chunk(b.getState().html5,2).map(function(e,t){return E.default.createElement("tr",{key:"html5-"+t},E.default.createElement("td",{className:e[0].key&&"key"||""},e[0].name||""),E.default.createElement("td",null,e[0].desc||""),E.default.createElement("td",{className:e[1]&&e[1].key&&"key"||""},e[1]&&e[1].name||""),E.default.createElement("td",null,e[1]&&e[1].desc||""))}))),E.default.createElement("p",null,"CSS3 ",E.default.createElement("a",{onClick:a.bind(e)},t.cssTableOpen?"收起":"展开")),t.cssTableOpen&&E.default.createElement("table",null,E.default.createElement("thead",null,E.default.createElement("tr",null,E.default.createElement("th",{width:"15%"},"新增元素"),E.default.createElement("th",{width:"35%"},"说明"),E.default.createElement("th",{width:"15%"},"新增元素"),E.default.createElement("th",{width:"35%"},"说明"))),E.default.createElement("tbody",null,g.default.chunk(b.getState().css3,2).map(function(e,t){return E.default.createElement("tr",{key:"css3-"+t},E.default.createElement("td",{className:e[0].key&&"key"||""},e[0].name||""),E.default.createElement("td",null,e[0].desc||""),E.default.createElement("td",{className:e[1]&&e[1].key&&"key"||""},e[1]&&e[1].name||""),E.default.createElement("td",null,e[1]&&e[1].desc||""))}))),E.default.createElement("p",null,"HTML5 API ",E.default.createElement("a",{onClick:l.bind(e)},t.apiTableOpen?"收起":"展开")),t.apiTableOpen&&E.default.createElement("table",null,E.default.createElement("thead",null,E.default.createElement("tr",null,E.default.createElement("th",{width:"15%"},"新增API"),E.default.createElement("th",{width:"85%"},"说明"))),E.default.createElement("tbody",null,b.getState().html5Api.map(function(e,t){return E.default.createElement("tr",{key:"html5Api-"+t},E.default.createElement("td",{className:e.key&&"key"||""},e.name||""),E.default.createElement("td",null,e.desc||""))})))),E.default.createElement("li",null,E.default.createElement("h3",null,"6、跨域有几种解决方案？分别的原理是什么？"),E.default.createElement("p",null,E.default.createElement("a",{target:"_blank",href:"//shaojun427.github.io/singlePage/rossDomain.pdf"},"预览"))),E.default.createElement("li",null,E.default.createElement("h3",null,"7、一个http 请求包含哪些内容？(请求头、请求体、返回头、返回体)中包含的哪些比较常用的字段"),E.default.createElement("p",null,"一个http请求包含了请求行（请求方法、请求url、请求协议）、请求头、请求体"),E.default.createElement("p",null,"请求头： ",E.default.createElement("a",{onClick:r.bind(e)},t.reqHeadOpen?"收起":"展开")),t.reqHeadOpen&&E.default.createElement("table",null,E.default.createElement("thead",null,E.default.createElement("tr",null,E.default.createElement("th",{width:"15%"},"属性"),E.default.createElement("th",{width:"20%"},"例子"),E.default.createElement("th",{width:"65%"},"说明"))),E.default.createElement("tbody",null,b.getState().reqHead.map(function(e,t){return E.default.createElement("tr",{key:"reqHead-"+t},E.default.createElement("td",{className:e.key&&"key"||""},e.name||""),E.default.createElement("td",null,e.default||""),E.default.createElement("td",null,e.desc||""))}))),E.default.createElement("p",null,"请求体：通过请求头中的Content-Type来定义mime类型（get请求的请求体是空，不需要定义）"),E.default.createElement("p",null,"响应头： ",E.default.createElement("a",{onClick:u.bind(e)},t.resHeadOpen?"收起":"展开")),t.resHeadOpen&&E.default.createElement("table",null,E.default.createElement("thead",null,E.default.createElement("tr",null,E.default.createElement("th",{width:"15%"},"属性"),E.default.createElement("th",{width:"20%"},"例子"),E.default.createElement("th",{width:"65%"},"说明"))),E.default.createElement("tbody",null,b.getState().resHead.map(function(e,t){return E.default.createElement("tr",{key:"reqHead-"+t},E.default.createElement("td",{className:e.key&&"key"||""},e.name||""),E.default.createElement("td",null,e.default||""),E.default.createElement("td",null,e.desc||""))}))),E.default.createElement("p",null,"响应体：通过响应头中的Content-Type来定义mime类型")),E.default.createElement("li",null,E.default.createElement("h3",null,"8、http1.x vs http2.x 有哪些优化？每个新增的特性的原理是什么？(比如什么是多路复用、什么是服务端推送等)"),E.default.createElement("p",null,"1、新的二进制格式：协议解析1.x是基于文本解析的，2.x是基于0和1的二进制解析的。"),E.default.createElement("p",null,"2、连接共享（多路复用）：一个request对应一个stream并分配一个id，这样一个连接上可以有多个stream，每个stream的frame可以随机的混杂在一起，接收方可以根据stream id将frame再归属到各自不同的request里面。http2.0里的每个stream都可以设置又优先级（Priority）和依赖（Dependency）。"),E.default.createElement("p",null,"3、header压缩：http1.x的header由于cookie和user agent很容易膨胀，而且每次都要重复发送。http2.0使用encoder来减少需要传输的header大小，通讯双方各自cache一份header fields表，既避免了重复header的传输，又减小了需要传输的大小。高效的压缩算法可以很大的压缩header，减少发送包的数量从而降低延迟。"),E.default.createElement("p",null,"4、Server Push（服务端推送）：http2.0能通过push的方式将客户端需要的内容预先推送过去，所以也叫“cache push”。另外有一点值得注意的是，客户端如果退出某个业务场景，出于流量或者其它因素需要取消server push，也可以通过发送RST_STREAM类型的frame来做到。")),E.default.createElement("li",null,E.default.createElement("h3",null,"9、长连接相关的知识，常用的方式有哪些？"),E.default.createElement("p",null,"长连接（Connection:keep-alive）就是客户端与服务器之间创建和保持稳定可靠的连接。TCP协议本身是支持长连接的。"),E.default.createElement("p",null,"1、从 HTTP/1.1起，默认使用长连接，用以保持连接特性。在使用长连接的情况下，当一个网页打开完成后，客户端和服务器之间用于传输HTTP数据的 TCP连接不会关闭，如果客户端再次访问这个服务器上的网页，会继续使用这一条已经建立的连接。Keep-Alive不会永久保持连接，它有一个保持时间，可以在不同的服务器软件（如Apache）中设定这个时间。实现长连接要客户端和服务端都支持长连接。"),E.default.createElement("p",null,"2、WebSocket 协议，服务器可以主动推送数据到客户端")),E.default.createElement("li",null,E.default.createElement("h3",null,"10、前端上常见的性能优化有哪些方式"),E.default.createElement("p",null,"dns缓存，减少dns查询次数"),E.default.createElement("p",null,"减少传输过程中实体的大小和请求次数"),E.default.createElement("p",null,"——1、js、css资源合并打包压缩"),E.default.createElement("p",null,"——2、雪碧图"),E.default.createElement("p",null,"——3、合理利用浏览器缓存，缓存一些不太会变动的资源"),E.default.createElement("p",null,"——4、减少cookie里没必要的属性"),E.default.createElement("p",null,"少用跳转，减少重定向次数"),E.default.createElement("p",null,"资源都放到cdn上使用"),E.default.createElement("p",null,"图标用iconfont"),E.default.createElement("p",null,"js放底部，css放顶部"),E.default.createElement("p",null,"减少重绘和回流"),E.default.createElement("p",null,"合理使用Viewport 等meta头部"),E.default.createElement("p",null,"减少dom节点"),E.default.createElement("p",null,"事件代理（事件冒泡原理）"),E.default.createElement("p",null,"BigPipe"))),E.default.createElement("h2",null,"框架、类库题"),E.default.createElement("ul",null,E.default.createElement("li",null,E.default.createElement("h3",null,"1、react 的生命周期"),E.default.createElement("p",null,"getDefaultProps"),E.default.createElement("p",null,"getInitialState"),E.default.createElement("p",null,"componentWillMount"),E.default.createElement("p",null,"render"),E.default.createElement("p",null,"componentDidMount"),E.default.createElement("p",null,"componentWillReceiveProps（props改变触发）"),E.default.createElement("p",{className:"red"},"-----------------setState-------------------"),E.default.createElement("p",null,"shouldComponentUpdate"),E.default.createElement("p",null,"componentWillUpdate"),E.default.createElement("p",null,"render"),E.default.createElement("p",null,"componentDidUpdate"),E.default.createElement("p",{className:"red"},"-----------------setState-------------------"),E.default.createElement("p",null,"componentWillUnmount"),E.default.createElement("p",null,"componentWillReceiveProps")),E.default.createElement("li",null,E.default.createElement("h3",null,"2、react 的虚拟dom 是什么概念？"),E.default.createElement("p",null,"Virtual DOM 是一个 JavaScript 对象。每次，我们只需要告诉 React 下一个状态是什么，React会自己构建一个新的 Virtual DOM，然后根据新旧 Virtual DOM 快速计算其差异，找出需要重绘或重排的元素，告诉浏览器。浏览器根据相关的更新，重新计算 DOM Tree，重绘页面。")),E.default.createElement("li",null,E.default.createElement("h3",null,"3、react 的diff 算法的大致原理是什么？react 中经常使用的key 用来解决什么问题？"),E.default.createElement("p",null,"diff算法的前提假设"),E.default.createElement("p",null,"1、两个相同组件产生类似的DOM结构，不同的组件产生不同的DOM结构；"),E.default.createElement("p",null,"2、对于同一层次的一组子节点，它们可以通过唯一的id（react的key）进行区分。"),E.default.createElement("p",null,"比较两个虚拟DOM节点，可以分为以下三种情况："),"1) 节点类型不同；",E.default.createElement("p",null,"当在树中的同一位置前后的节点类型不同，React会直接删除原节点，然后创建并插入新的节点。"),E.default.createElement("p",null,"注意：删除节点即彻底销毁该节点，也就是说，后续不会查找是否有另外一个节点等同于删除的该节点。如果删除的该节点有子节点，那么子节点也会被删除。这也是diff算法复杂度能降到O(n)的原因。"),E.default.createElement("p",null,"同理，当树的同一个位置遇到前后不同的组件时，也是销毁原组件，把新的组件加上去。这应用了第一个假设，不同的组件一般会产生不同的DOM结构，与其浪费时间去比较不同的DOM结构，还不如完全创建一个新的组件加上去。"),"2) 节点类型相同，但是属性不同。",E.default.createElement("p",null,"React会对属性进行重设从而实现节点的转换。"),"3) 节点类型相同且属性相同。",E.default.createElement("p",null,"对于同层节点，若节点本身完全相同（类型相同且属性相同），只是位置不同，则React只需要考虑同层节点的位置变换，不需要进行节点的销毁和重新创建，这就需要用到下面介绍的key属性。"),E.default.createElement("p",null,"对于不同层的节点，即使节点本身完全相同（类型相同且属性相同），也只能销毁和重新创建。"),E.default.createElement("p",null),E.default.createElement("p",null,"key相同，若组件属性有所变化，则react只更新组件对应的属性；没有变化则不更新。"),E.default.createElement("p",null,"key值不同，则react先销毁该组件(有状态组件的componentWillUnmount会执行)，然后重新创建该组件（有状态组件的constructor和componentWillUnmount都会执行）"),E.default.createElement("p",null,"key不是用来提升react的性能的，不过用好key对性能是有帮助的。")),E.default.createElement("li",null,E.default.createElement("h3",null,"4、react 最新版本目前是多少？最新的版本中做了哪些比较大的优化？"),E.default.createElement("p",null,"16.2，16的新特性："),E.default.createElement("p",null,"1、render里面可以直接return组件列表或者字符串"),E.default.createElement("p",null,"2、setState里面不是新的state，而是一个callback，cb里面return最新的state,return null不触发更新"),E.default.createElement("p",null,"3、新增componentDidCatch生命周期，可以创建一个错误组件来处理错误（之前的版本是错误就unMount组件树）"),E.default.createElement("p",null,"4、createPortal可以将组件的dom渲染到父组件dom之外，但是react层级上，还是在父组件里面。"),E.default.createElement("p",null,"5、支持自定义DOM属性"),E.default.createElement("p",null,"6、更好的服务器端渲染。React 16 包含了一个完全重写的服务端渲染器（randerer）。它真的很快，因为它支持流（streaming），所以可以向客户端更快地发送字节。"),E.default.createElement("p",null,"7、削减文件大小，相比以前的版本，小了32%（gzip后小了30%）。")),E.default.createElement("li",null,E.default.createElement("h3",null,"5、react中的fiber是什么意思？"),E.default.createElement("p",null,"react用的是Stack reconcile调度策略。这个策略像函数调用栈一样，会深度优先遍历所有的 Virtual DOM 节点，进行Diff。它一定要等整棵 Virtual DOM 计算完成之后，才将任务出栈释放主线程。所以，在浏览器主线程被 React更新状态任务占据的时候，用户与浏览器进行任何的交互都不能得到反馈，只有等到任务结束，才能突然得到浏览器的响应。而fiber是将原来的整个 Virtual DOM 的更新任务拆分成一个个小的任务。每次做完一个小任务之后，放弃一下自己的执行将主线程空闲出来，看看有没有其他的任务。如果有的话，就暂停本次任务，执行其他的任务，如果没有的话，就继续下一个任务。"),E.default.createElement("p",null,"fiber将整个页面更新并重渲染过程分为两个阶段。"),E.default.createElement("p",null,"1、Reconcile 阶段。此阶段中，依序遍历组件，通过diff 算法，判断组件是否需要更新，给需要更新的组件加上tag。遍历完之后，将所有带有tag的组件加到一个队列中（可以设定优先级）。这个阶段的任务可以被打断。"),E.default.createElement("p",null,"2、Commit 阶段。根据在 Reconcile 阶段生成的数组，遍历更新DOM，这个阶段需要一次性执行完。如果是在其他的渲染环境 -- Native，硬件，就会更新对应的元素。")),E.default.createElement("li",null,E.default.createElement("h3",null,"6、react中的HOC是什么意思？"),E.default.createElement("p",null,"HOC(全称Higher-order component)是一种React的进阶使用方法，主要还是为了便于组件的复用。HOC就是一个方法，获取一个组件，返回一个更高级的组件。"),E.default.createElement("p",null,'在React开发过程中，发现有很多情况下，组件需要被"增强"，比如说给组件添加或者修改一些特定的props，一些权限的管理，或者一些其他的优化之类的。而如果这个功能是针对多个组件的，同时每一个组件都写一套相同的代码，明显显得不是很明智，所以就可以考虑使用HOC。'),E.default.createElement("p",null,"作用：1、代码复用，代码模块化；2、增删改props；3、渲染劫持")),E.default.createElement("li",null,E.default.createElement("h3",null,"7、redux 跟mobx 有什么区别？redux 的基本运行原理？reducer是用来干什么的？"),E.default.createElement("p",null,"在 Redux 中，你将所有的 state 都放在一个全局的 store。这个 store 对象就是你的单一数据源。另一方面，多个 reducers 允许你修改不可变的 state。Mobx 则相反，它使用多 stores。和 Redux 的 reducers 类似，你可以在技术层面或领域进行分治。"),E.default.createElement("p",null,"创建reducers，维护state =》根据reducers注册一个store =》dispatch建立action和state的属性 =》subscribe监听store获取最新state =》触发action改变state =》reducers根据action处理state，并返回一个新的state"),E.default.createElement("p",null,"reducer是一个用来更新state的纯函数。")),E.default.createElement("li",null,E.default.createElement("h3",null,"8、let/var 的区别？"),E.default.createElement("p",null,"let是块级作用域，var是函数作用域")),E.default.createElement("li",null,E.default.createElement("h3",null,"9、set/get 的优点？"),E.default.createElement("p",null)),E.default.createElement("li",null,E.default.createElement("h3",null,"10、箭头函数可以解决什么问题？箭头函数中的arguments 是否有值？"),E.default.createElement("p",null,"1.对 this 的关联。函数内置 this 的值，取决于箭头函数在哪儿定义，而非箭头函数执行的上下文环境。"),E.default.createElement("p",null,"2.new 不可用。箭头函数不能使用 new 关键字来实例化对象，不然会报错。"),E.default.createElement("p",null,"3.this 不可变。函数内置 this 不可变，在函数体内整个执行环境中为常量。"),E.default.createElement("p",null,"4.没有arguments对象。更不能通过arguments对象访问传入参数。只能使用显式命名或其他ES6新特性来完成。")),E.default.createElement("li",null,E.default.createElement("h3",null,"11、promise vs await async 的区别？"),E.default.createElement("p",null,"await async就是基于promise的改进，async函数默认返回一个Promise对象，然后await等待的也是一个Promise对象。await的功能类似promise的.then；但是可以省略匿名函数。"),E.default.createElement("p",null,"await async可以嵌套try catch来处理错误。"))))}}]),t}(p.Component);t.default=w},937:function(e,t){},938:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=n(64),l=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[{name:"<article>",desc:"表示一段视频并提供播放的用户界面",key:!0},{name:"<aside>",desc:"定义页面的侧边栏内容",key:!0},{name:"<audio>",desc:"定义音频内容",key:!0},{name:"<bdi>",desc:"允许您设置一段文本，使其脱离其父元素的文本方向设置。"},{name:"<canvas>",desc:"定义图形，比如图表和其他图像,标签只是图形容器，您必须使用脚本来绘制图形",key:!0},{name:"<command>",desc:"New\t定义命令按钮，比如单选按钮、复选框或按钮"},{name:"<datalist>",desc:"定义选项列表。请与 input 元素配合使用该元素，来定义 input 可能的值。"},{name:"<details>",desc:"用于描述文档或文档某个部分的细节",key:!0},{name:"<dialog>",desc:"定义对话框，比如提示框",key:!0},{name:"<embed>",desc:"定义嵌入的内容，比如插件"},{name:"<figcaption>",desc:"定义<figure> 元素的标题"},{name:"<figure>",desc:"规定独立的流内容（图像、图表、照片、代码等等）。"},{name:"<footer>",desc:"定义 section 或 document 的页脚。",key:!0},{name:"<header>",desc:"定义了文档的头部区域",key:!0},{name:"<keygen>",desc:"规定用于表单的密钥对生成器字段。"},{name:"<mark>",desc:"定义带有记号的文本。请在需要突出显示文本时使用 <m> 标签。"},{name:"<meter>",desc:"定义度量衡。仅用于已知最大和最小值的度量。"},{name:"<nav>",desc:"定义导航链接的部分",key:!0},{name:"<output>",desc:"定义不同类型的输出，比如脚本的输出。"},{name:"<progress>",desc:"定义运行中的进度（进程）。",key:!0},{name:"<rp>",desc:"<rp> 标签在 ruby 注释中使用，以定义不支持 ruby 元素的浏览器所显示的内容。"},{name:"<rt>",desc:"<rt> 标签定义字符（中文注音或字符）的解释或发音。"},{name:"<ruby>",desc:"<ruby> 标签定义 ruby 注释（中文注音或字符）。"},{name:"<section>",desc:"<section> 标签定义文档中的节（section、区段）。比如章节、页眉、页脚或文档中的其他部分。",key:!0},{name:"<source>",desc:"<source> 标签为媒介元素（比如 <video> 和 <audio>）定义媒介资源。"},{name:"<summary>",desc:"<summary> 标签包含 details 元素的标题，'details' 元素用于描述有关文档或文档片段的详细信息。"},{name:"<time>",desc:"定义日期或时间，或者两者。"},{name:"<track>",desc:"<track> 标签为诸如 video 元素之类的媒介规定外部文本轨道"},{name:"<video>",desc:"<video> 标签定义视频，比如电影片段或其他视频流。",key:!0},{name:"<wbr>",desc:"规定在文本中的何处适合添加换行符。"}];return arguments[1],e},r=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[{name:"@keyframes",desc:"定义一个动画,@keyframes定义的动画名称用来被animation-name所使用。",key:!0},{name:"animation",desc:"复合属性。检索或设置对象所应用的动画特效。",key:!0},{name:"animation-name",desc:"检索或设置对象所应用的动画名称 ,必须与规则@keyframes配合使用，因为动画名称由@keyframes定义",key:!0},{name:"animation-duration",desc:"检索或设置对象动画的持续时间",key:!0},{name:"animation-timing-function",desc:"检索或设置对象动画的过渡类型",key:!0},{name:"animation-delay",desc:"检索或设置对象动画的延迟时间",key:!0},{name:"animation-iteration-count",desc:"检索或设置对象动画的循环次数",key:!0},{name:"animation-direction",desc:"检索或设置对象动画在循环中是否反向运动",key:!0},{name:"animation-play-state",desc:"检索或设置对象动画的状态",key:!0},{name:"background-clip",desc:"指定对象的背景图像向外裁剪的区域。"},{name:"background-origin",desc:"设置或检索对象的背景图像计算background-position时的参考原点(位置)。"},{name:"background-size",desc:"检索或设置对象的背景图像的尺寸大小。"},{name:"border-bottom-left-radius",desc:"设置或检索对象的左下角圆角边框。提供2个参数，2个参数以空格分隔，每个参数允许设置1个参数值，第1个参数表示水平半径，第2个参数表示垂直半径，如第2个参数省略，则默认等于第1个参数"},{name:"border-bottom-right-radius",desc:"设置或检索对象的右下角圆角边框。"},{name:"border-image",desc:"设置或检索对象的边框样式使用图像来填充。",key:!0},{name:"border-image-outset",desc:"规定边框图像超过边框的量。"},{name:"border-image-repeat",desc:"规定图像边框是否应该被重复（repeated）、拉伸（stretched）或铺满（rounded）。"},{name:"border-image-slice",desc:"规定图像边框的向内偏移。"},{name:"border-image-source",desc:"规定要使用的图像，代替 border-style 属性中设置的边框样式。"},{name:"border-image-width",desc:"规定图像边框的宽度。"},{name:"border-radius",desc:"设置或检索对象使用圆角边框。",key:!0},{name:"border-top-left-radius",desc:"定义左上角边框的形状。"},{name:"border-top-right-radius",desc:"定义右上角边框的形状。"},{name:"box-decoration-break",desc:"规定行内元素被折行"},{name:"box-shadow",desc:"向方框添加一个或多个阴影。"},{name:"overflow-x",desc:"如果内容溢出了元素内容区域，是否对内容的左/右边缘进行裁剪。",key:!0},{name:"overflow-y",desc:"如果内容溢出了元素内容区域，是否对内容的上/下边缘进行裁剪。",key:!0},{name:"overflow-style",desc:"规定溢出元素的首选滚动方法。"},{name:"rotation",desc:"围绕由 rotation-point 属性定义的点对元素进行旋转。"},{name:"rotation-point",desc:"定义距离上左边框边缘的偏移点。"},{name:"color-profile",desc:"允许使用源的颜色配置文件的默认以外的规范"},{name:"opacity",desc:"设置一个元素的透明度级别",key:!0},{name:"rendering-intent",desc:"允许超过默认颜色配置文件渲染意向的其他规范",key:!0},{name:"flex",desc:"复合属性。设置或检索弹性盒模型对象的子元素如何分配空间。",key:!0},{name:"flex-grow",desc:"设置或检索弹性盒的扩展比率。",key:!0},{name:"flex-shrink",desc:"设置或检索弹性盒的收缩比率。",key:!0},{name:"flex-basis",desc:"设置或检索弹性盒伸缩基准值。",key:!0},{name:"flex-flow",desc:"复合属性。设置或检索弹性盒模型对象的子元素排列方式。",key:!0},{name:"flex-direction",desc:"该属性通过定义flex容器的主轴方向来决定felx子项在flex容器中的位置。",key:!0},{name:"flex-wrap",desc:"该属性控制flex容器是单行或者多行，同时横轴的方向决定了新行堆叠的方向。",key:!0},{name:"align-content",desc:"在弹性容器内的各项没有占用交叉轴上所有可用的空间时对齐容器内的各项（垂直）。",key:!0},{name:"align-items",desc:"定义flex子项在flex容器的当前行的侧轴（纵轴）方向上的对齐方式。",key:!0},{name:"align-self",desc:"定义flex子项单独在侧轴（纵轴）方向上的对齐方式。",key:!0},{name:"justify-content",desc:"设置或检索弹性盒子元素在主轴（横轴）方向上的对齐方式。",key:!0},{name:"order",desc:"设置或检索弹性盒模型对象的子元素出现的順序。",key:!0},{name:"@font-face",desc:'一个规则，允许网站下载并使用其他超过"Web- safe"字体的字体',key:!0},{name:"text-overflow",desc:"指定当文本溢出包含的元素，应该发生什么",key:!0},{name:"text-shadow",desc:"为文本添加阴影",key:!0},{name:"text-wrap",desc:"指定文本换行规则",key:!0},{name:"word-break",desc:"指定非CJK文字的断行规则",key:!0},{name:"word-wrap",desc:"设置浏览器是否对过长的单词进行换行。",key:!0},{name:"font-stretch",desc:"收缩或拉伸当前的字体系列"},{name:"grid-rows",desc:"指定在网格中每列的高度"},{name:"grid-columns",desc:"指定在网格中每列的宽度"},{name:"transform",desc:"适用于2D或3D转换的元素",key:!0},{name:"transform-origin",desc:"允许您更改转化元素位置",key:!0},{name:"transform-style",desc:"3D空间中的指定如何嵌套元素",key:!0},{name:"perspective",desc:"指定3D元素是如何查看透视图",key:!0},{name:"perspective-origin",desc:"指定3D元素底部位置",key:!0},{name:"backface-visibility",desc:"定义一个元素是否应该是可见的，不对着屏幕时",key:!0},{name:"transition",desc:"此属性是 transition-property、transition-duration、transition-timing-function、transition-delay 的简写形式。",key:!0},{name:"transition-property",desc:"设置用来进行过渡的 CSS 属性。",key:!0},{name:"transition-duration",desc:"设置过渡进行的时间长度。",key:!0},{name:"transition-timing-function",desc:"设置过渡进行的时序函数。",key:!0},{name:"transition-delay",desc:"指定过渡开始的时间。",key:!0},{name:"box-sizing",desc:"允许您为了适应区域以某种方式定义某些元素",key:!0},{name:"resize",desc:"定义元素是否可以改变大小",key:!0}];return arguments[1],e},u=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[{name:"sessionStorage",desc:"sessionStorage对象存储特定于某个会话的数据，也就是该数据只保持到浏览器关闭。这个对象就像会话cookie，也会在浏览器关闭后消失。存储在sessionStorage中的数据可以跨越页面刷新而存在，同时如果浏览器支持，浏览器崩溃并重启之后依然可用（FireFox和WebKit都支持，IE不支持） ",key:!0},{name:"localStorage",desc:"要访问同一个localStorage对象，页面必须来自同一个域名，使用同一种协议，在同一个端口上",key:!0},{name:"File API",desc:"File API在表单中的文件输入字段的基础上，又添加了一些直接访问文件信息的接口。H5在DOM中为文件输入元素添加了一个files集合，在通过文本输入字段选择了一或多个文件时，files集合中将包含一组File对象，每个File对象对应着一个文件。每个File对象都有下列只读属性",key:!0},{name:"FileReader",desc:"FlieReader类型实现的是一种异步文件读取机制。可以把FileReader想象成XMLHttpRequest，区别只是它读取的是文件信息，而不是远程服务器。",key:!0},{name:"Web Workers",desc:"专用Web Worker提供可一个简单的方法使的web内容能够在后台运行脚本。一旦worker创建后，它可以向由它的创建者指定的事件监听函数传递消息，这样改worker生成的所有任务就都会接收到这个消息。worker线程能够在不干扰UI的情况下执行任务。",key:!0},{name:"history对象",desc:"history对象保存着用户上网的历史记录，从窗口被打开的那一刻算起。h5中的history对象新增了两个新方法：history.pushState()和history.replaeState();  ",key:!0},{name:"drag & drop",desc:"拖拽事件",key:!0}];return arguments[1],e},c=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[{name:"Accept",default:"Accept: text/plain",desc:"设置接受的内容类型",key:!0},{name:"Accept-Charset",default:"Accept-Charset: utf-8",desc:"设置接受的字符编码",key:!0},{name:"Accept-Encoding",default:"Accept-Encoding: gzip, deflate",desc:"设置接受的编码格式",key:!0},{name:"Accept-Datetime",default:"Accept-Datetime: Thu, 31 May 2007 20:35:00 GMT",desc:"设置接受的版本时间"},{name:"Accept-Language",default:"Accept-Language: en-US",desc:"设置接受的语言",key:!0},{name:"Authorization",default:"Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==",desc:"设置HTTP身份验证的凭证"},{name:"Cache-Control",default:"Cache-Control: no-cache",desc:"设置请求响应链上所有的缓存机制必须遵守的指令",key:!0},{name:"Connection",default:"Connection: keep-alive；Connection: Upgrade",desc:"设置当前连接和hop-by-hop协议请求字段列表的控制选项",key:!0},{name:"Content-Length",default:"Content-Length: 348",desc:"设置请求体的字节长度",key:!0},{name:"Content-MD5",default:"Content-MD5: Q2hlY2sgSW50ZWdyaXR5IQ==",desc:"设置基于MD5算法对请求体内容进行Base64二进制编码"},{name:"Content-Type",default:"Content-Type: application/x-www-form-urlencoded",desc:"设置请求体的MIME类型（适用POST和PUT请求）",key:!0},{name:"Cookie",default:"Cookie: $Version=1; Skin=new;",desc:"设置服务器使用Set-Cookie发送的http cookie",key:!0},{name:"Date",default:"Date: Tue, 15 Nov 1994 08:12:31 GMT",desc:"设置消息发送的日期和时间"},{name:"Expect",default:"Expect: 100-continue",desc:"标识客户端需要的特殊浏览器行为"},{name:"Forwarded",default:"Forwarded: for=192.0.2.60;proto=http;by=203.0.113.43；Forwarded: for=192.0.2.43, for=198.51.100.17",desc:"披露客户端通过http代理连接web服务的源信息"},{name:"From",default:"From: user@example.com",desc:"设置发送请求的用户的email地址"},{name:"Host",default:"Host: en.wikipedia.org:8080；Host: en.wikipedia.org",desc:"设置服务器域名和TCP端口号，如果使用的是服务请求标准端口号，端口号可以省略",key:!0},{name:"If-Match",default:"If-Match: 737060cd8c284d8af7ad3082f209582d",desc:"设置客户端的ETag,当时客户端ETag和服务器生成的ETag一致才执行，适用于更新自从上次更新之后没有改变的资源"},{name:"If-Modified-Since",default:"If-Modified-Since: Sat, 29 Oct 1994 19:43:31 GMT",desc:"设置更新时间，从更新时间到服务端接受请求这段时间内如果资源没有改变，允许服务端返回304 Not Modified"},{name:"If-None-Match",default:'If-None-Match: "737060cd8c284d8af7ad3082f209582d"',desc:"设置客户端ETag，如果和服务端接受请求生成的ETage相同，允许服务端返回304 Not Modified"},{name:"If-Range",default:'If-Range: "737060cd8c284d8af7ad3082f209582d"',desc:"设置客户端ETag，如果和服务端接受请求生成的ETage相同，返回缺失的实体部分；否则返回整个新的实体"},{name:"If-Unmodified-Since",default:"If-Unmodified-Since: Sat, 29 Oct 1994 19:43:31 GMT",desc:"设置更新时间，只有从更新时间到服务端接受请求这段时间内实体没有改变，服务端才会发送响应"},{name:"Max-Forwards",default:"Max-Forwards: 10",desc:"限制代理或网关转发消息的次数"},{name:"Origin",default:"Origin: http://www.example-social-network.com",desc:"标识跨域资源请求（请求服务端设置Access-Control-Allow-Origin响应字段）",key:!0},{name:"Pragma",default:"Pragma: no-cache",desc:"设置特殊实现字段，可能会对请求响应链有多种影响"},{name:"Proxy-Authorization",default:"Proxy-Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==",desc:"为连接代理授权认证信息"},{name:"Range",default:"Range: bytes=500-999",desc:"请求部分实体，设置请求实体的字节数范围，具体可以参见HTTP/1.1中的Byte serving",key:!0},{name:"Referer",default:"Referer: http://en.wikipedia.org/wiki/Main_Page",desc:'设置前一个页面的地址，并且前一个页面中的连接指向当前请求，意思就是如果当前请求是在A页面中发送的，那么referer就是A页面的url地址（轶事：这个单词正确的拼法应该是"referrer",但是在很多规范中都拼成了"referer"，所以这个单词也就成为标准用法）',key:!0},{name:"TE",default:"TE: trailers, deflate",desc:"设置用户代理期望接受的传输编码格式，和响应头中的Transfer-Encoding字段一样"},{name:"Upgrade",default:"Upgrade: HTTP/2.0, HTTPS/1.3, IRC/6.9, RTA/x11, websocket",desc:"请求服务端升级协议"},{name:"X-Requested-With",default:"X-Requested-With: XMLHttpRequest",desc:"标识Ajax请求，大部分js框架发送请求时都会设置它为XMLHttpRequest",key:!0},{name:"Warning",default:"Warning: 199 Miscellaneous warning",desc:"实体可能会发生的问题的通用警告"},{name:"User-Agent",default:"User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:12.0) Gecko/20100101 Firefox/21.0",desc:"用户代理的字符串值",key:!0}];return arguments[1],e},d=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[{name:"Accept-Ranges",default:"Accept-Ranges: bytes",desc:"服务器通过byte serving支持的部分内容范围类型",key:!0},{name:"Access-Control-Allow-Origin",default:"Access-Control-Allow-Origin: *",desc:"指定哪些站点可以参与跨站资源共享",key:!0},{name:"Age",default:"Age: 12",desc:"对象在代理缓存中暂存的秒数",key:!0},{name:"Cache-Control",default:"Cache-Control:max-age=600",desc:"告诉服务端到客户端所有的缓存机制是否可以缓存这个对象，单位是秒",key:!0},{name:"Connection",default:"Connection:keep-alive",desc:"设置当前连接和hop-by-hop协议请求字段列表的控制选项",key:!0},{name:"Content-Encoding",default:"Content-Encoding:gzip",desc:"设置数据使用的编码类型",key:!0},{name:"Content-Length",default:"Content-Length:960",desc:"响应体的字节长度",key:!0},{name:"Content-Type",default:"Content-Type:application/json; charset=utf-8",desc:"设置响应体的MIME类型",key:!0},{name:"Date",default:"Date:Wed, 28 Mar 2018 03:24:46 GMT",desc:"设置消息发送的日期和时间",key:!0},{name:"Expires",default:"Expires:Wed, 28 Mar 2018 03:34:46 GMT",desc:"设置响应体的过期时间",key:!0},{name:"Last-Modified",default:"Last-Modified:Fri, 23 Mar 2018 02:04:11 GMT",desc:"设置请求对象最后一次的修改日期",key:!0},{name:"Server",default:"Server:GitHub.com",desc:"服务器名称",key:!0},{name:"Vary",default:"Vary:Accept-Encoding",desc:"通知下级代理如何匹配未来的请求头已让其决定缓存的响应是否可用而不是重新从源主机请求新的",key:!0},{name:"Via",default:"Via:1.1 varnish",desc:"通知客户端代理，通过其要发送什么响应",key:!0}];return arguments[1],e},o=(0,a.combineReducers)({html5:l,css3:r,html5Api:u,reqHead:c,resHead:d});t.default=o},939:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var l=n(41),r=a(l),u=n(6),c=a(u),d=n(11),o=a(d),i=n(7),s=a(i),f=n(8),m=a(f);n(940);var p=n(1),E=a(p),h=n(133),y=(a(h),function(e){function t(e){(0,c.default)(this,t);var n=(0,s.default)(this,(t.__proto__||(0,r.default)(t)).call(this,e));return n.state={},n}return(0,m.default)(t,e),(0,o.default)(t,[{key:"componentWillMount",value:function(){"zhoushaojun"!==window.sessionStorage.getItem("two")&&(location.href="/")}},{key:"render",value:function(){return this.state,E.default.createElement("div",{className:"interview-question"},E.default.createElement("h1",null,"前端面试题补充"),E.default.createElement("h2",null,"基础题"),E.default.createElement("ul",null,E.default.createElement("li",null,E.default.createElement("h3",null,"1、ajax运行过程")),E.default.createElement("li",null,E.default.createElement("h3",null,"2、什么是函数的柯里化(Currying)？"),E.default.createElement("p",null,"在一个函数中首先填充几个参数(然后再返回一个新函数[只接受一个参数])的技术称为柯里化(Currying)。"),E.default.createElement("p",null,"function add(x,y){"),E.default.createElement("p",null,"　return x + y;"),E.default.createElement("p",null,"}"),E.default.createElement("p",null,"add(3,4);"),E.default.createElement("p",null,"===============>柯里化"),E.default.createElement("p",null,"var add = function(x){"),E.default.createElement("p",null,"　return function(y){"),E.default.createElement("p",null,"　　return x + y;"),E.default.createElement("p",null,"　}"),E.default.createElement("p",null,"};"),E.default.createElement("p",null,"add(3)(4);"),E.default.createElement("p",null,"1. 参数复用；2. 提前返回；3. 延迟计算/运行。")),E.default.createElement("li",null,E.default.createElement("h3",null,"3、浏览器渲染过程"),E.default.createElement("p",null,"1、处理 HTML 标记并构建 DOM 树。"),E.default.createElement("p",null,"2、处理 CSS 标记并构建 CSSOM 树。"),E.default.createElement("p",null,"3、将 DOM 与 CSSOM 合并成一个渲染树。"),E.default.createElement("p",null,"4、根据渲染树来布局，以计算每个节点的几何信息。"),E.default.createElement("p",null,"5、将各个节点绘制到屏幕上。")),E.default.createElement("li",null,E.default.createElement("h3",null,"js常用设计模式"))))}}]),t}(p.Component));t.default=y},940:function(e,t){}},[914]);
//# sourceMappingURL=index.js.map